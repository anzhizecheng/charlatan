// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import contracts "github.com/guiyomh/charlatan/internal/contracts"
import mock "github.com/stretchr/testify/mock"

// Row is an autogenerated mock type for the Row type
type Row struct {
	mock.Mock
}

// AddDependency provides a mock function with given fields: key, value
func (_m *Row) AddDependency(key string, value contracts.Relation) {
	_m.Called(key, value)
}

// AddField provides a mock function with given fields: key, value
func (_m *Row) AddField(key string, value interface{}) {
	_m.Called(key, value)
}

// DependencyReference provides a mock function with given fields:
func (_m *Row) DependencyReference() map[string]contracts.Relation {
	ret := _m.Called()

	var r0 map[string]contracts.Relation
	if rf, ok := ret.Get(0).(func() map[string]contracts.Relation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]contracts.Relation)
		}
	}

	return r0
}

// Fields provides a mock function with given fields:
func (_m *Row) Fields() map[string]interface{} {
	ret := _m.Called()

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func() map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	return r0
}

// HasDependencies provides a mock function with given fields:
func (_m *Row) HasDependencies() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *Row) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Pk provides a mock function with given fields:
func (_m *Row) Pk() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Schema provides a mock function with given fields:
func (_m *Row) Schema() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SetPk provides a mock function with given fields: _a0
func (_m *Row) SetPk(_a0 interface{}) {
	_m.Called(_a0)
}

// TableName provides a mock function with given fields:
func (_m *Row) TableName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
